// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SoulLevelTable.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MokomoGames.Protobuf {

  /// <summary>Holder for reflection information generated from SoulLevelTable.proto</summary>
  public static partial class SoulLevelTableReflection {

    #region Descriptor
    /// <summary>File descriptor for SoulLevelTable.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SoulLevelTableReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRTb3VsTGV2ZWxUYWJsZS5wcm90bxIFZWNpdHkiZAoUU291bExldmVsVGFi",
            "bGVSZWNvcmQSCgoCbm8YASABKA0SDQoFbGV2ZWwYAiABKA0SCgoCaHAYAyAB",
            "KA0SFgoOcmVjb3ZlcnlfcG93ZXIYBCABKA0SDQoFcG93ZXIYBSABKA0iPgoO",
            "U291bExldmVsVGFibGUSLAoHcmVjb3JkcxgBIAMoCzIbLmVjaXR5LlNvdWxM",
            "ZXZlbFRhYmxlUmVjb3JkQheqAhRNb2tvbW9HYW1lcy5Qcm90b2J1ZmIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MokomoGames.Protobuf.SoulLevelTableRecord), global::MokomoGames.Protobuf.SoulLevelTableRecord.Parser, new[]{ "No", "Level", "Hp", "RecoveryPower", "Power" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MokomoGames.Protobuf.SoulLevelTable), global::MokomoGames.Protobuf.SoulLevelTable.Parser, new[]{ "Records" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SoulLevelTableRecord : pb::IMessage<SoulLevelTableRecord> {
    private static readonly pb::MessageParser<SoulLevelTableRecord> _parser = new pb::MessageParser<SoulLevelTableRecord>(() => new SoulLevelTableRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SoulLevelTableRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MokomoGames.Protobuf.SoulLevelTableReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoulLevelTableRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoulLevelTableRecord(SoulLevelTableRecord other) : this() {
      no_ = other.no_;
      level_ = other.level_;
      hp_ = other.hp_;
      recoveryPower_ = other.recoveryPower_;
      power_ = other.power_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoulLevelTableRecord Clone() {
      return new SoulLevelTableRecord(this);
    }

    /// <summary>Field number for the "no" field.</summary>
    public const int NoFieldNumber = 1;
    private uint no_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint No {
      get { return no_; }
      set {
        no_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 2;
    private uint level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 3;
    private uint hp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "recovery_power" field.</summary>
    public const int RecoveryPowerFieldNumber = 4;
    private uint recoveryPower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RecoveryPower {
      get { return recoveryPower_; }
      set {
        recoveryPower_ = value;
      }
    }

    /// <summary>Field number for the "power" field.</summary>
    public const int PowerFieldNumber = 5;
    private uint power_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Power {
      get { return power_; }
      set {
        power_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SoulLevelTableRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SoulLevelTableRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (No != other.No) return false;
      if (Level != other.Level) return false;
      if (Hp != other.Hp) return false;
      if (RecoveryPower != other.RecoveryPower) return false;
      if (Power != other.Power) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (No != 0) hash ^= No.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Hp != 0) hash ^= Hp.GetHashCode();
      if (RecoveryPower != 0) hash ^= RecoveryPower.GetHashCode();
      if (Power != 0) hash ^= Power.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (No != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(No);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Level);
      }
      if (Hp != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Hp);
      }
      if (RecoveryPower != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(RecoveryPower);
      }
      if (Power != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Power);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (No != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(No);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
      }
      if (Hp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Hp);
      }
      if (RecoveryPower != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RecoveryPower);
      }
      if (Power != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Power);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SoulLevelTableRecord other) {
      if (other == null) {
        return;
      }
      if (other.No != 0) {
        No = other.No;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Hp != 0) {
        Hp = other.Hp;
      }
      if (other.RecoveryPower != 0) {
        RecoveryPower = other.RecoveryPower;
      }
      if (other.Power != 0) {
        Power = other.Power;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            No = input.ReadUInt32();
            break;
          }
          case 16: {
            Level = input.ReadUInt32();
            break;
          }
          case 24: {
            Hp = input.ReadUInt32();
            break;
          }
          case 32: {
            RecoveryPower = input.ReadUInt32();
            break;
          }
          case 40: {
            Power = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SoulLevelTable : pb::IMessage<SoulLevelTable> {
    private static readonly pb::MessageParser<SoulLevelTable> _parser = new pb::MessageParser<SoulLevelTable>(() => new SoulLevelTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SoulLevelTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MokomoGames.Protobuf.SoulLevelTableReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoulLevelTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoulLevelTable(SoulLevelTable other) : this() {
      records_ = other.records_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoulLevelTable Clone() {
      return new SoulLevelTable(this);
    }

    /// <summary>Field number for the "records" field.</summary>
    public const int RecordsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::MokomoGames.Protobuf.SoulLevelTableRecord> _repeated_records_codec
        = pb::FieldCodec.ForMessage(10, global::MokomoGames.Protobuf.SoulLevelTableRecord.Parser);
    private readonly pbc::RepeatedField<global::MokomoGames.Protobuf.SoulLevelTableRecord> records_ = new pbc::RepeatedField<global::MokomoGames.Protobuf.SoulLevelTableRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::MokomoGames.Protobuf.SoulLevelTableRecord> Records {
      get { return records_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SoulLevelTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SoulLevelTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!records_.Equals(other.records_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= records_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      records_.WriteTo(output, _repeated_records_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += records_.CalculateSize(_repeated_records_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SoulLevelTable other) {
      if (other == null) {
        return;
      }
      records_.Add(other.records_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            records_.AddEntriesFrom(input, _repeated_records_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
